library.single_transaction:
  path: '/library/transaction/new/{action}/{item}'
  defaults:
    _form: '\Drupal\library\Form\LibraryCheckoutForm'
  requirements:
    _permission: 'administer transactions'
library.bulk_transaction:
  path: '/library/transaction/bulk/{action}'
  defaults:
    _form: '\Drupal\library\Form\LibraryCheckOutBulkForm'
  requirements:
    _permission: 'administer transactions'

# In order to to create pages it is necessary to define routes for them.
# A route maps a URL path to a controller. It defines what function
# or method will be called when a URL is accessed.
# If the user accesses http://drupal8.dev//node/{nid}/history, the routing
# system will look for a route with that path. In this case it will find a
# match, and execute the _controller callback. In this case the callback is
# defined as a classname
# ("\Drupal\library\Controller\ItemHistory")
# and a method ("show").
library.item_history_show:
  path: '/node/{node}/history'
  defaults:
    _controller: '\Drupal\library\Controller\ItemHistory::show'
    _title: 'Library history of item'
  requirements:
    _permission: 'administer transactions'
    node: \d+
  options:
    _node_operation_route: TRUE

# In order to to create pages it is necessary to define routes for them.
# A route maps a URL path to a controller. It defines what function
# or method will be called when a URL is accessed.
# If the user accesses http://drupal8.dev//library/overdue-items, the routing
# system will look for a route with that path. In this case it will find a
# match, and execute the _controller callback. In this case the callback is
# defined as a classname
# ("\Drupal\library\Controller\OverdueOverview")
# and a method ("list").
library.overdue_overview_list:
  path: '/library/overdue-items'
  defaults:
    _controller: '\Drupal\library\Controller\OverdueOverview::listing'
    _title: 'Overdue items'
  requirements:
    _permission: 'administer transactions'
